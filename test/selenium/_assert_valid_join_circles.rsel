# Checks: smth about about circles joiing, need to review this one later. Also, it's somewhat big for include...

owner = owner.is_a?(User) ? owner : User.find_by_login(owner)

logged_in_user ||= Guest.new
logged_in_user = logged_in_user.is_a?(User) ? logged_in_user : User.find_by_login(logged_in_user)

# Somehow we need to get around the fact that when this is "compiled", we don't have access to current db structure. 
# Here we explicitly pass in what it should be... I guess this is where normal testing really shines over this acceptance business.
requested_invite_to ||= {}

open "/kroogi/join_circles/#{owner.id}"
assert_text_present 'Join Circles'
assert_text_present 'What circle do you want to join?'

# Shows correct circle names
owner.circles.each_with_index do |circle, idx|
  assert_element_present "css=#circle_#{circle.relationshiptype_id}"
  assert_text_present "#{idx+1}. #{circle.name} Circle"
  allow_action = logged_in_user.is_self_or_owner?(owner) ? false : true
  
  # Not perfect, b/c asserting in general, not just for THIS circle, but still...
  assert_text_present circle.members_count == 0 ? 'No followers' : "Followers: #{circle.members_count}"
  
  # Paid
  if circle.is_paid?
    assert_text_present "Subscription fee of #{fee_list_per_currency(circle)} per month is requested"
  end
  
  # Invited
  if logged_in_user.invited_to?(circle)
    assert_text_present "has invited you to join this circle"
    assert_text_present "No, thanks"
  else
    if circle.open?
      if allow_action
        assert_element_present "css=#join_open_#{circle.relationshiptype_id}"
      end
    elsif !logged_in_user.invites_i_requested.requests_to(circle).pending.blank? || requested_invite_to[circle.relationshiptype_id.to_s]
      assert_element_present "css=#invite_requested_#{circle.relationshiptype_id}"
    else
      assert_text_present "This circle is by invitation only"
      # Status will change if any other circle is requested -- can't tell at this point
      # if circle.can_request_invite? && allow_action
      #   assert_element_present "css=#request_invite_#{circle.relationshiptype_id}"
      # else
      #   assert_text_present "no requests"
      # end
    end
  end
  
  # Owns
  unless allow_action
    assert_text_present "Edit Circle Settings"
  end
  

end
